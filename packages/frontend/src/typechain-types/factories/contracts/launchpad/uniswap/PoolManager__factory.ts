/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  PoolManager,
  PoolManagerInterface,
} from "../../../../contracts/launchpad/uniswap/PoolManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0Desired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Desired",
        type: "uint256",
      },
      {
        internalType: "uint24",
        name: "feeTier",
        type: "uint24",
      },
    ],
    name: "createPoolAndAddLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "positionManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class PoolManager__factory {
  static readonly abi = _abi;
  static createInterface(): PoolManagerInterface {
    return new Interface(_abi) as PoolManagerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PoolManager {
    return new Contract(address, _abi, runner) as unknown as PoolManager;
  }
}
