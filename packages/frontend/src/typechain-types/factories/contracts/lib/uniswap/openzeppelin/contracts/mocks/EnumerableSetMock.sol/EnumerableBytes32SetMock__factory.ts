/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../../../../common";
import type {
  EnumerableBytes32SetMock,
  EnumerableBytes32SetMockInterface,
} from "../../../../../../../../contracts/lib/uniswap/openzeppelin/contracts/mocks/EnumerableSetMock.sol/EnumerableBytes32SetMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    name: "OperationResult",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "at",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "contains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "length",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506103ae806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631d1a696d1461005c5780631f7b6d321461008d578063446bffba146100a757806395bc2673146100c6578063e0886f90146100e3575b600080fd5b6100796004803603602081101561007257600080fd5b5035610100565b604080519115158252519081900360200190f35b610095610112565b60408051918252519081900360200190f35b6100c4600480360360208110156100bd57600080fd5b5035610123565b005b6100c4600480360360208110156100dc57600080fd5b503561016c565b610095600480360360208110156100f957600080fd5b5035610178565b600061010c8183610184565b92915050565b600061011e6000610197565b905090565b600061012f81836101a2565b60408051821515815290519192507fed9840e0775590557ad736875d96c95cf1458b766335f74339951a32c82a9e33919081900360200190a15050565b600061012f81836101ae565b600061010c81836101ba565b600061019083836101c6565b9392505050565b600061010c826101de565b600061019083836101e2565b6000610190838361022c565b600061019083836102f2565b60009081526001919091016020526040902054151590565b5490565b60006101ee83836101c6565b6102245750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561010c565b50600061010c565b600081815260018301602052604081205480156102e8578354600019808301919081019060009087908390811061025f57fe5b906000526020600020015490508087600001848154811061027c57fe5b6000918252602080832090910192909255828152600189810190925260409020908401905586548790806102ac57fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061010c565b600091505061010c565b815460009082106103345760405162461bcd60e51b81526004018080602001828103825260228152602001806103576022913960400191505060405180910390fd5b82600001828154811061034357fe5b906000526020600020015490509291505056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473a264697066735822122037d0f2aaa20c8714075de4123b2fefe9d61601d354f8b3a0589cd8822afd342964736f6c63430007060033";

type EnumerableBytes32SetMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EnumerableBytes32SetMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EnumerableBytes32SetMock__factory extends ContractFactory {
  constructor(...args: EnumerableBytes32SetMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EnumerableBytes32SetMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): EnumerableBytes32SetMock__factory {
    return super.connect(runner) as EnumerableBytes32SetMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnumerableBytes32SetMockInterface {
    return new Interface(_abi) as EnumerableBytes32SetMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EnumerableBytes32SetMock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as EnumerableBytes32SetMock;
  }
}
