/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Purchase,
  PurchaseInterface,
} from "../../../contracts/launchpad/Purchase";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC721EnumerableForbiddenBatchMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "ERC721OutOfBoundsIndex",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimableToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collateralToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enableClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collateralToken",
        type: "address",
      },
      {
        internalType: "string",
        name: "nftTokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "nftTokenSymbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastPurchaseId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "launchId",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "launchpad",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "purchaseBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "refundEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setRefundState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_claimableToken",
        type: "address",
      },
    ],
    name: "setTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenSymbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5061dead6040518060400160405280600881526020016754656d706c61746560c01b8152506040518060400160405280600381526020016215141360ea1b8152508160009081620000639190620001b2565b506001620000728282620001b2565b5050506001600160a01b038116620000a457604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000af81620000bb565b506001600b556200027e565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200013857607f821691505b6020821081036200015957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001ad57600081815260208120601f850160051c81016020861015620001885750805b601f850160051c820191505b81811015620001a95782815560010162000194565b5050505b505050565b81516001600160401b03811115620001ce57620001ce6200010d565b620001e681620001df845462000123565b846200015f565b602080601f8311600181146200021e5760008415620002055750858301515b600019600386901b1c1916600185901b178555620001a9565b600085815260208120601f198616915b828110156200024f578886015182559484019460019091019084016200022e565b50858210156200026e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611ef6806200028e6000396000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c80634c4a386f1161012557806395d89b41116100ad578063c87b56dd1161007c578063c87b56dd14610483578063d4e3743314610496578063e985e9c5146104a9578063f2fde38b146104bc578063f6d6d5aa146104cf57600080fd5b806395d89b4114610442578063a22cb4651461044a578063b2016bd41461045d578063b88d4fde1461047057600080fd5b806369df72ad116100f457806369df72ad146103d257806370a082311461040e578063715018a6146104215780637b61c320146104295780638da5cb5b1461043157600080fd5b80634c4a386f146103965780634f6ccce7146103a357806361fa86e6146103b65780636352211e146103bf57600080fd5b806323b872dd116101a857806328dae6e31161017757806328dae6e3146103295780632f745c591461033157806335f6efa914610344578063379607f51461037057806342842e0e1461038357600080fd5b806323b872dd146102de57806326a4e8d2146102f1578063278ecde1146103045780632866ed211461031757600080fd5b806308277dda116101e457806308277dda14610291578063095ea7b3146102a6578063156e29f6146102b957806318160ddd146102cc57600080fd5b806301ffc9a71461021657806302669b521461023e57806306fdde0314610269578063081812fc1461027e575b600080fd5b61022961022436600461189c565b6104e2565b60405190151581526020015b60405180910390f35b600f54610251906001600160a01b031681565b6040516001600160a01b039091168152602001610235565b61027161050d565b6040516102359190611909565b61025161028c36600461191c565b61059f565b6102a461029f3660046119fd565b6105c8565b005b6102a46102b4366004611aa7565b610628565b6102a46102c7366004611ad1565b610637565b6008545b604051908152602001610235565b6102a46102ec366004611b04565b610682565b6102a46102ff366004611b40565b610712565b6102a461031236600461191c565b61073c565b60145461022990610100900460ff1681565b6102a461089c565b6102d061033f366004611aa7565b61090d565b600f5461035b90600160a01b900463ffffffff1681565b60405163ffffffff9091168152602001610235565b6102a461037e36600461191c565b610972565b6102a4610391366004611b04565b610aaa565b6014546102299060ff1681565b6102d06103b136600461191c565b610aca565b6102d060135481565b6102516103cd36600461191c565b610b23565b6103f96103e036600461191c565b6015602052600090815260409020805460019091015482565b60408051928352602083019190915201610235565b6102d061041c366004611b40565b610b2e565b6102a4610b76565b610271610b8a565b600a546001600160a01b0316610251565b610271610c18565b6102a4610458366004611b69565b610c27565b601054610251906001600160a01b031681565b6102a461047e366004611ba0565b610c32565b61027161049136600461191c565b610c4a565b6102a46104a4366004611c1c565b610cb2565b6102296104b7366004611c39565b610d15565b6102a46104ca366004611b40565b610d43565b601154610251906001600160a01b031681565b60006001600160e01b0319821663780e9d6360e01b1480610507575061050782610d7e565b92915050565b6060600c805461051c90611c6c565b80601f016020809104026020016040519081016040528092919081815260200182805461054890611c6c565b80156105955780601f1061056a57610100808354040283529160200191610595565b820191906000526020600020905b81548152906001019060200180831161057857829003601f168201915b5050505050905090565b60006105aa82610dce565b506000828152600460205260409020546001600160a01b0316610507565b600f8054336001600160a01b031991821617909155601080549091166001600160a01b038716179055600c6105fd8582611cec565b50600d61060a8482611cec565b50600e6106178382611cec565b5061062181610e07565b5050505050565b610633828233610e59565b5050565b61063f610e66565b61065c8360136000815461065290611dc2565b9182905550610e93565b601380546000908152601560205260408082209490945590548152919091206001015550565b6001600160a01b0382166106b157604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006106be838333610ef8565b9050836001600160a01b0316816001600160a01b03161461070c576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016106a8565b50505050565b61071a610e66565b601180546001600160a01b0319166001600160a01b0392909216919091179055565b610744610fcd565b61074c610e66565b6010546001600160a01b03166107a45760405162461bcd60e51b815260206004820152601a60248201527f436f6c6c61746572616c2061646472657373206e6f742073657400000000000060448201526064016106a8565b6010546000828152601560205260409081902054905163095ea7b360e01b815230600482015260248101919091526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015610806573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082a9190611ddb565b506108713061084e836000908152600260205260409020546001600160a01b031690565b6000848152601560205260409020546010546001600160a01b0316929190610ff7565b60008181526015602052604081208181556001015561088f81611051565b6108996001600b55565b50565b6108a4610e66565b601454610100900460ff16156108fc5760405162461bcd60e51b815260206004820152601e60248201527f436c61696d2068617320616c7265616479206265656e20656e61626c6564000060448201526064016106a8565b6014805461ff001916610100179055565b600061091883610b2e565b82106109495760405163295f44f760e21b81526001600160a01b0384166004820152602481018390526044016106a8565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61097a610fcd565b610982610e66565b6011546001600160a01b03166109da5760405162461bcd60e51b815260206004820152601f60248201527f436c61696d61626c6520746f6b656e2061646472657373206e6f74207365740060448201526064016106a8565b6011546000828152601560205260409081902054905163095ea7b360e01b815230600482015260248101919091526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015610a3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a609190611ddb565b5061087130610a84836000908152600260205260409020546001600160a01b031690565b6000848152601560205260409020600101546011546001600160a01b0316929190610ff7565b610ac583838360405180602001604052806000815250610c32565b505050565b6000610ad560085490565b8210610afe5760405163295f44f760e21b815260006004820152602481018390526044016106a8565b60088281548110610b1157610b11611df8565b90600052602060002001549050919050565b600061050782610dce565b60006001600160a01b038216610b5a576040516322718ad960e21b8152600060048201526024016106a8565b506001600160a01b031660009081526003602052604090205490565b610b7e610e66565b610b886000610e07565b565b60128054610b9790611c6c565b80601f0160208091040260200160405190810160405280929190818152602001828054610bc390611c6c565b8015610c105780601f10610be557610100808354040283529160200191610c10565b820191906000526020600020905b815481529060010190602001808311610bf357829003601f168201915b505050505081565b6060600d805461051c90611c6c565b61063333838361108c565b610c3d848484610682565b61070c338585858561112b565b6060610c5582610dce565b506000610c60611255565b90506000815111610c805760405180602001604052806000815250610cab565b80610c8a84611264565b604051602001610c9b929190611e0e565b6040516020818303038152906040525b9392505050565b610cba610e66565b60145481151560ff909116151503610d025760405162461bcd60e51b815260206004820152600b60248201526a105b1c9958591e481cd95d60aa1b60448201526064016106a8565b6014805460ff1916911515919091179055565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610d4b610e66565b6001600160a01b038116610d7557604051631e4fbdf760e01b8152600060048201526024016106a8565b61089981610e07565b60006001600160e01b031982166380ac58cd60e01b1480610daf57506001600160e01b03198216635b5e139f60e01b145b8061050757506301ffc9a760e01b6001600160e01b0319831614610507565b6000818152600260205260408120546001600160a01b03168061050757604051637e27328960e01b8152600481018490526024016106a8565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610ac583838360016112f7565b600a546001600160a01b03163314610b885760405163118cdaa760e01b81523360048201526024016106a8565b6001600160a01b038216610ebd57604051633250574960e11b8152600060048201526024016106a8565b6000610ecb83836000610ef8565b90506001600160a01b03811615610ac5576040516339e3563760e11b8152600060048201526024016106a8565b600080610f068585856113fd565b90506001600160a01b038116610f6357610f5e84600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b610f86565b846001600160a01b0316816001600160a01b031614610f8657610f8681856114f6565b6001600160a01b038516610fa257610f9d84611577565b610fc5565b846001600160a01b0316816001600160a01b031614610fc557610fc58585611626565b949350505050565b6002600b5403610ff057604051633ee5aeb560e01b815260040160405180910390fd5b6002600b55565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261070c908590611676565b60006110606000836000610ef8565b90506001600160a01b03811661063357604051637e27328960e01b8152600481018390526024016106a8565b6001600160a01b0382166110be57604051630b61174360e31b81526001600160a01b03831660048201526024016106a8565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561062157604051630a85bd0160e11b81526001600160a01b0384169063150b7a029061116d908890889087908790600401611e3d565b6020604051808303816000875af19250505080156111a8575060408051601f3d908101601f191682019092526111a591810190611e7a565b60015b611211573d8080156111d6576040519150601f19603f3d011682016040523d82523d6000602084013e6111db565b606091505b50805160000361120957604051633250574960e11b81526001600160a01b03851660048201526024016106a8565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461124d57604051633250574960e11b81526001600160a01b03851660048201526024016106a8565b505050505050565b6060600e805461051c90611c6c565b60606000611271836116e7565b600101905060008167ffffffffffffffff81111561129157611291611951565b6040519080825280601f01601f1916602001820160405280156112bb576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846112c557509392505050565b808061130b57506001600160a01b03821615155b156113cd57600061131b84610dce565b90506001600160a01b038316158015906113475750826001600160a01b0316816001600160a01b031614155b801561135a57506113588184610d15565b155b156113835760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016106a8565b81156113cb5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6000828152600260205260408120546001600160a01b039081169083161561142a5761142a8184866117bf565b6001600160a01b03811615611468576114476000856000806112f7565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615611497576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b600061150183610b2e565b6000838152600760209081526040808320546001600160a01b038816845260069092529091209192509081831461155857600083815260208281526040808320548584528184208190558352600790915290208290555b6000938452600760209081526040808620869055938552525081205550565b60085460009061158990600190611e97565b600083815260096020526040812054600880549394509092849081106115b1576115b1611df8565b9060005260206000200154905080600883815481106115d2576115d2611df8565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061160a5761160a611eaa565b6001900381819060005260206000200160009055905550505050565b6000600161163384610b2e565b61163d9190611e97565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b600080602060008451602086016000885af180611699576040513d6000823e3d81fd5b50506000513d915081156116b15780600114156116be565b6001600160a01b0384163b155b1561070c57604051635274afe760e01b81526001600160a01b03851660048201526024016106a8565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106117265772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611752576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061177057662386f26fc10000830492506010015b6305f5e1008310611788576305f5e100830492506008015b612710831061179c57612710830492506004015b606483106117ae576064830492506002015b600a83106105075760010192915050565b6117ca838383611823565b610ac5576001600160a01b0383166117f857604051637e27328960e01b8152600481018290526024016106a8565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016106a8565b60006001600160a01b03831615801590610fc55750826001600160a01b0316846001600160a01b0316148061185d575061185d8484610d15565b80610fc55750506000908152600460205260409020546001600160a01b03908116911614919050565b6001600160e01b03198116811461089957600080fd5b6000602082840312156118ae57600080fd5b8135610cab81611886565b60005b838110156118d45781810151838201526020016118bc565b50506000910152565b600081518084526118f58160208601602086016118b9565b601f01601f19169290920160200192915050565b602081526000610cab60208301846118dd565b60006020828403121561192e57600080fd5b5035919050565b80356001600160a01b038116811461194c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561198257611982611951565b604051601f8501601f19908116603f011681019082821181831017156119aa576119aa611951565b816040528093508581528686860111156119c357600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126119ee57600080fd5b610cab83833560208501611967565b600080600080600060a08688031215611a1557600080fd5b611a1e86611935565b9450602086013567ffffffffffffffff80821115611a3b57600080fd5b611a4789838a016119dd565b95506040880135915080821115611a5d57600080fd5b611a6989838a016119dd565b94506060880135915080821115611a7f57600080fd5b50611a8c888289016119dd565b925050611a9b60808701611935565b90509295509295909350565b60008060408385031215611aba57600080fd5b611ac383611935565b946020939093013593505050565b600080600060608486031215611ae657600080fd5b611aef84611935565b95602085013595506040909401359392505050565b600080600060608486031215611b1957600080fd5b611b2284611935565b9250611b3060208501611935565b9150604084013590509250925092565b600060208284031215611b5257600080fd5b610cab82611935565b801515811461089957600080fd5b60008060408385031215611b7c57600080fd5b611b8583611935565b91506020830135611b9581611b5b565b809150509250929050565b60008060008060808587031215611bb657600080fd5b611bbf85611935565b9350611bcd60208601611935565b925060408501359150606085013567ffffffffffffffff811115611bf057600080fd5b8501601f81018713611c0157600080fd5b611c1087823560208401611967565b91505092959194509250565b600060208284031215611c2e57600080fd5b8135610cab81611b5b565b60008060408385031215611c4c57600080fd5b611c5583611935565b9150611c6360208401611935565b90509250929050565b600181811c90821680611c8057607f821691505b602082108103611ca057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610ac557600081815260208120601f850160051c81016020861015611ccd5750805b601f850160051c820191505b8181101561124d57828155600101611cd9565b815167ffffffffffffffff811115611d0657611d06611951565b611d1a81611d148454611c6c565b84611ca6565b602080601f831160018114611d4f5760008415611d375750858301515b600019600386901b1c1916600185901b17855561124d565b600085815260208120601f198616915b82811015611d7e57888601518255948401946001909101908401611d5f565b5085821015611d9c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600060018201611dd457611dd4611dac565b5060010190565b600060208284031215611ded57600080fd5b8151610cab81611b5b565b634e487b7160e01b600052603260045260246000fd5b60008351611e208184602088016118b9565b835190830190611e348183602088016118b9565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611e70908301846118dd565b9695505050505050565b600060208284031215611e8c57600080fd5b8151610cab81611886565b8181038181111561050757610507611dac565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220c117b8d3c7324ab973cbf16afdb3d7ff18352d4758e0c8c18dc58f59c031300664736f6c63430008140033";

type PurchaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PurchaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Purchase__factory extends ContractFactory {
  constructor(...args: PurchaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Purchase & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Purchase__factory {
    return super.connect(runner) as Purchase__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PurchaseInterface {
    return new Interface(_abi) as PurchaseInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Purchase {
    return new Contract(address, _abi, runner) as unknown as Purchase;
  }
}
