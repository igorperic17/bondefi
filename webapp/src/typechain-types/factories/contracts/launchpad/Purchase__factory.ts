/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Purchase,
  PurchaseInterface,
} from "../../../contracts/launchpad/Purchase";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC721EnumerableForbiddenBatchMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "ERC721OutOfBoundsIndex",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimableToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collateralToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enableClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "nftTokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "nftTokenSymbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastPurchaseId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "launchId",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "purchaseBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "refundEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setRefundState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenSymbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060006040518060400160405280600881526020016754656d706c61746560c01b8152506040518060400160405280600381526020016215141360ea1b8152508160009081620000629190620001b1565b506001620000718282620001b1565b5050506001600160a01b038116620000a357604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000ae81620000ba565b506001600b556200027d565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200013757607f821691505b6020821081036200015857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001ac57600081815260208120601f850160051c81016020861015620001875750805b601f850160051c820191505b81811015620001a85782815560010162000193565b5050505b505050565b81516001600160401b03811115620001cd57620001cd6200010c565b620001e581620001de845462000122565b846200015e565b602080601f8311600181146200021d5760008415620002045750858301515b600019600386901b1c1916600185901b178555620001a8565b600085815260208120601f198616915b828110156200024e578886015182559484019460019091019084016200022d565b50858210156200026d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611d03806200028d6000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80635c6d8da11161011a57806395d89b41116100ad578063c87b56dd1161007c578063c87b56dd14610448578063d4e374331461045b578063e985e9c51461046e578063f2fde38b14610481578063f6d6d5aa1461049457600080fd5b806395d89b41146103ff578063a22cb46514610407578063b2016bd41461041a578063b88d4fde1461043557600080fd5b806370a08231116100e957806370a08231146103cb578063715018a6146103de5780637b61c320146103e65780638da5cb5b146103ee57600080fd5b80635c6d8da11461036057806361fa86e6146103735780636352211e1461037c57806369df72ad1461038f57600080fd5b80632866ed2111610192578063379607f511610161578063379607f51461031a57806342842e0e1461032d5780634c4a386f146103405780634f6ccce71461034d57600080fd5b80632866ed21146102c857806328dae6e3146102da5780632f745c59146102e257806335f6efa9146102f557600080fd5b8063156e29f6116101ce578063156e29f61461027d57806318160ddd1461029057806323b872dd146102a2578063278ecde1146102b557600080fd5b806301ffc9a71461020057806306fdde0314610228578063081812fc1461023d578063095ea7b314610268575b600080fd5b61021361020e3660046116e4565b6104a7565b60405190151581526020015b60405180910390f35b6102306104d2565b60405161021f9190611751565b61025061024b366004611764565b610564565b6040516001600160a01b03909116815260200161021f565b61027b610276366004611799565b61058d565b005b61027b61028b3660046117c3565b61059c565b6008545b60405190815260200161021f565b61027b6102b03660046117f6565b6105e7565b61027b6102c3366004611764565b610677565b60135461021390610100900460ff1681565b61027b610747565b6102946102f0366004611799565b6107b8565b600f546103059063ffffffff1681565b60405163ffffffff909116815260200161021f565b61027b610328366004611764565b61081d565b61027b61033b3660046117f6565b6108c1565b6013546102139060ff1681565b61029461035b366004611764565b6108e1565b61027b61036e3660046118de565b61093a565b61029460125481565b61025061038a366004611764565b61096a565b6103b661039d366004611764565b6014602052600090815260409020805460019091015482565b6040805192835260208301919091520161021f565b6102946103d9366004611977565b610975565b61027b6109bd565b6102306109d1565b600a546001600160a01b0316610250565b610230610a5f565b61027b6104153660046119a2565b610a6e565b600f546102509064010000000090046001600160a01b031681565b61027b6104433660046119d5565b610a79565b610230610456366004611764565b610a91565b61027b610469366004611a51565b610af9565b61021361047c366004611a6c565b610b5c565b61027b61048f366004611977565b610b8a565b601054610250906001600160a01b031681565b60006001600160e01b0319821663780e9d6360e01b14806104cc57506104cc82610bc5565b92915050565b6060600c80546104e190611a96565b80601f016020809104026020016040519081016040528092919081815260200182805461050d90611a96565b801561055a5780601f1061052f5761010080835404028352916020019161055a565b820191906000526020600020905b81548152906001019060200180831161053d57829003601f168201915b5050505050905090565b600061056f82610c15565b506000828152600460205260409020546001600160a01b03166104cc565b610598828233610c4e565b5050565b6105a4610c5b565b6105c1836012600081546105b790611ae6565b9182905550610c88565b601280546000908152601460205260408082209490945590548152919091206001015550565b6001600160a01b03821661061657604051633250574960e11b8152600060048201526024015b60405180910390fd5b6000610623838333610ced565b9050836001600160a01b0316816001600160a01b031614610671576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161060d565b50505050565b61067f610dc2565b60135460ff166106c65760405162461bcd60e51b81526020600482015260126024820152711499599d5b99081b9bdd08195b98589b195960721b604482015260640161060d565b6106ce610c5b565b61071c306106f1836000908152600260205260409020546001600160a01b031690565b600084815260146020526040902054600f5464010000000090046001600160a01b0316929190610dec565b60008181526014602052604081208181556001015561073a81610e46565b6107446001600b55565b50565b61074f610c5b565b601354610100900460ff16156107a75760405162461bcd60e51b815260206004820152601e60248201527f436c61696d2068617320616c7265616479206265656e20656e61626c65640000604482015260640161060d565b6013805461ff001916610100179055565b60006107c383610975565b82106107f45760405163295f44f760e21b81526001600160a01b03841660048201526024810183905260440161060d565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b610825610dc2565b601354610100900460ff166108705760405162461bcd60e51b815260206004820152601160248201527010db185a5b481b9bdd08195b98589b1959607a1b604482015260640161060d565b610878610c5b565b61071c3061089b836000908152600260205260409020546001600160a01b031690565b6000848152601460205260409020600101546010546001600160a01b0316929190610dec565b6108dc83838360405180602001604052806000815250610a79565b505050565b60006108ec60085490565b82106109155760405163295f44f760e21b8152600060048201526024810183905260440161060d565b6008828154811061092857610928611aff565b90600052602060002001549050919050565b600c6109468582611b5b565b50600d6109538482611b5b565b50600e6109608382611b5b565b5061067181610e81565b60006104cc82610c15565b60006001600160a01b0382166109a1576040516322718ad960e21b81526000600482015260240161060d565b506001600160a01b031660009081526003602052604090205490565b6109c5610c5b565b6109cf6000610e81565b565b601180546109de90611a96565b80601f0160208091040260200160405190810160405280929190818152602001828054610a0a90611a96565b8015610a575780601f10610a2c57610100808354040283529160200191610a57565b820191906000526020600020905b815481529060010190602001808311610a3a57829003601f168201915b505050505081565b6060600d80546104e190611a96565b610598338383610ed3565b610a848484846105e7565b6106713385858585610f72565b6060610a9c82610c15565b506000610aa761109d565b90506000815111610ac75760405180602001604052806000815250610af2565b80610ad1846110ac565b604051602001610ae2929190611c1b565b6040516020818303038152906040525b9392505050565b610b01610c5b565b60135481151560ff909116151503610b495760405162461bcd60e51b815260206004820152600b60248201526a105b1c9958591e481cd95d60aa1b604482015260640161060d565b6013805460ff1916911515919091179055565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610b92610c5b565b6001600160a01b038116610bbc57604051631e4fbdf760e01b81526000600482015260240161060d565b61074481610e81565b60006001600160e01b031982166380ac58cd60e01b1480610bf657506001600160e01b03198216635b5e139f60e01b145b806104cc57506301ffc9a760e01b6001600160e01b03198316146104cc565b6000818152600260205260408120546001600160a01b0316806104cc57604051637e27328960e01b81526004810184905260240161060d565b6108dc838383600161113f565b600a546001600160a01b031633146109cf5760405163118cdaa760e01b815233600482015260240161060d565b6001600160a01b038216610cb257604051633250574960e11b81526000600482015260240161060d565b6000610cc083836000610ced565b90506001600160a01b038116156108dc576040516339e3563760e11b81526000600482015260240161060d565b600080610cfb858585611245565b90506001600160a01b038116610d5857610d5384600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b610d7b565b846001600160a01b0316816001600160a01b031614610d7b57610d7b818561133e565b6001600160a01b038516610d9757610d92846113bf565b610dba565b846001600160a01b0316816001600160a01b031614610dba57610dba858561146e565b949350505050565b6002600b5403610de557604051633ee5aeb560e01b815260040160405180910390fd5b6002600b55565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526106719085906114be565b6000610e556000836000610ced565b90506001600160a01b03811661059857604051637e27328960e01b81526004810183905260240161060d565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610f0557604051630b61174360e31b81526001600160a01b038316600482015260240161060d565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561109657604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610fb4908890889087908790600401611c4a565b6020604051808303816000875af1925050508015610fef575060408051601f3d908101601f19168201909252610fec91810190611c87565b60015b611058573d80801561101d576040519150601f19603f3d011682016040523d82523d6000602084013e611022565b606091505b50805160000361105057604051633250574960e11b81526001600160a01b038516600482015260240161060d565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461109457604051633250574960e11b81526001600160a01b038516600482015260240161060d565b505b5050505050565b6060600e80546104e190611a96565b606060006110b98361152f565b600101905060008167ffffffffffffffff8111156110d9576110d9611832565b6040519080825280601f01601f191660200182016040528015611103576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461110d57509392505050565b808061115357506001600160a01b03821615155b1561121557600061116384610c15565b90506001600160a01b0383161580159061118f5750826001600160a01b0316816001600160a01b031614155b80156111a257506111a08184610b5c565b155b156111cb5760405163a9fbf51f60e01b81526001600160a01b038416600482015260240161060d565b81156112135783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6000828152600260205260408120546001600160a01b039081169083161561127257611272818486611607565b6001600160a01b038116156112b05761128f60008560008061113f565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b038516156112df576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b600061134983610975565b6000838152600760209081526040808320546001600160a01b03881684526006909252909120919250908183146113a057600083815260208281526040808320548584528184208190558352600790915290208290555b6000938452600760209081526040808620869055938552525081205550565b6008546000906113d190600190611ca4565b600083815260096020526040812054600880549394509092849081106113f9576113f9611aff565b90600052602060002001549050806008838154811061141a5761141a611aff565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061145257611452611cb7565b6001900381819060005260206000200160009055905550505050565b6000600161147b84610975565b6114859190611ca4565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b600080602060008451602086016000885af1806114e1576040513d6000823e3d81fd5b50506000513d915081156114f9578060011415611506565b6001600160a01b0384163b155b1561067157604051635274afe760e01b81526001600160a01b038516600482015260240161060d565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061156e5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061159a576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106115b857662386f26fc10000830492506010015b6305f5e10083106115d0576305f5e100830492506008015b61271083106115e457612710830492506004015b606483106115f6576064830492506002015b600a83106104cc5760010192915050565b61161283838361166b565b6108dc576001600160a01b03831661164057604051637e27328960e01b81526004810182905260240161060d565b60405163177e802f60e01b81526001600160a01b03831660048201526024810182905260440161060d565b60006001600160a01b03831615801590610dba5750826001600160a01b0316846001600160a01b031614806116a557506116a58484610b5c565b80610dba5750506000908152600460205260409020546001600160a01b03908116911614919050565b6001600160e01b03198116811461074457600080fd5b6000602082840312156116f657600080fd5b8135610af2816116ce565b60005b8381101561171c578181015183820152602001611704565b50506000910152565b6000815180845261173d816020860160208601611701565b601f01601f19169290920160200192915050565b602081526000610af26020830184611725565b60006020828403121561177657600080fd5b5035919050565b80356001600160a01b038116811461179457600080fd5b919050565b600080604083850312156117ac57600080fd5b6117b58361177d565b946020939093013593505050565b6000806000606084860312156117d857600080fd5b6117e18461177d565b95602085013595506040909401359392505050565b60008060006060848603121561180b57600080fd5b6118148461177d565b92506118226020850161177d565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561186357611863611832565b604051601f8501601f19908116603f0116810190828211818310171561188b5761188b611832565b816040528093508581528686860111156118a457600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126118cf57600080fd5b610af283833560208501611848565b600080600080608085870312156118f457600080fd5b843567ffffffffffffffff8082111561190c57600080fd5b611918888389016118be565b9550602087013591508082111561192e57600080fd5b61193a888389016118be565b9450604087013591508082111561195057600080fd5b5061195d878288016118be565b92505061196c6060860161177d565b905092959194509250565b60006020828403121561198957600080fd5b610af28261177d565b8035801515811461179457600080fd5b600080604083850312156119b557600080fd5b6119be8361177d565b91506119cc60208401611992565b90509250929050565b600080600080608085870312156119eb57600080fd5b6119f48561177d565b9350611a026020860161177d565b925060408501359150606085013567ffffffffffffffff811115611a2557600080fd5b8501601f81018713611a3657600080fd5b611a4587823560208401611848565b91505092959194509250565b600060208284031215611a6357600080fd5b610af282611992565b60008060408385031215611a7f57600080fd5b611a888361177d565b91506119cc6020840161177d565b600181811c90821680611aaa57607f821691505b602082108103611aca57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600060018201611af857611af8611ad0565b5060010190565b634e487b7160e01b600052603260045260246000fd5b601f8211156108dc57600081815260208120601f850160051c81016020861015611b3c5750805b601f850160051c820191505b8181101561109457828155600101611b48565b815167ffffffffffffffff811115611b7557611b75611832565b611b8981611b838454611a96565b84611b15565b602080601f831160018114611bbe5760008415611ba65750858301515b600019600386901b1c1916600185901b178555611094565b600085815260208120601f198616915b82811015611bed57888601518255948401946001909101908401611bce565b5085821015611c0b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008351611c2d818460208801611701565b835190830190611c41818360208801611701565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611c7d90830184611725565b9695505050505050565b600060208284031215611c9957600080fd5b8151610af2816116ce565b818103818111156104cc576104cc611ad0565b634e487b7160e01b600052603160045260246000fdfea26469706673582212209144c3491e9cab19236f1280f41c513d9bff355134a2afdeab063d4b45576eee64736f6c63430008140033";

type PurchaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PurchaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Purchase__factory extends ContractFactory {
  constructor(...args: PurchaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Purchase & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Purchase__factory {
    return super.connect(runner) as Purchase__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PurchaseInterface {
    return new Interface(_abi) as PurchaseInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Purchase {
    return new Contract(address, _abi, runner) as unknown as Purchase;
  }
}
