/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../../../../common";
import type {
  EnumerableBytes32SetMock,
  EnumerableBytes32SetMockInterface,
} from "../../../../../../../../contracts/lib/uniswap/openzeppelin/contracts/mocks/EnumerableSetMock.sol/EnumerableBytes32SetMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    name: "OperationResult",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "at",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "contains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "length",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610529806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631d1a696d1461005c5780631f7b6d32146100a0578063446bffba146100be57806395bc2673146100ec578063e0886f901461011a575b600080fd5b6100886004803603602081101561007257600080fd5b810190808035906020019092919050505061015c565b60405180821515815260200191505060405180910390f35b6100a8610179565b6040518082815260200191505060405180910390f35b6100ea600480360360208110156100d457600080fd5b810190808035906020019092919050505061018a565b005b6101186004803603602081101561010257600080fd5b81019080803590602001909291905050506101df565b005b6101466004803603602081101561013057600080fd5b8101908080359060200190929190505050610234565b6040518082815260200191505060405180910390f35b600061017282600061025190919063ffffffff16565b9050919050565b60006101856000610268565b905090565b60006101a082600061027d90919063ffffffff16565b90507fed9840e0775590557ad736875d96c95cf1458b766335f74339951a32c82a9e338160405180821515815260200191505060405180910390a15050565b60006101f582600061029490919063ffffffff16565b90507fed9840e0775590557ad736875d96c95cf1458b766335f74339951a32c82a9e338160405180821515815260200191505060405180910390a15050565b600061024a8260006102ab90919063ffffffff16565b9050919050565b600061026083600001836102c2565b905092915050565b6000610276826000016102e5565b9050919050565b600061028c83600001836102f6565b905092915050565b60006102a38360000183610366565b905092915050565b60006102ba836000018361044e565b905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b600061030283836102c2565b61035b578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050610360565b600090505b92915050565b6000808360010160008481526020019081526020016000205490506000811461044257600060018203905060006001866000018054905003905060008660000182815481106103b157fe5b90600052602060002001549050808760000184815481106103ce57fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061040657fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610448565b60009150505b92915050565b6000818360000180549050116104af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806104d26022913960400191505060405180910390fd5b8260000182815481106104be57fe5b906000526020600020015490509291505056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473a264697066735822122009400a2ab41b98f022dc6eae2b8a4940b2bab51590ebc8c9d61dc6600fbea13064736f6c63430007060033";

type EnumerableBytes32SetMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EnumerableBytes32SetMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EnumerableBytes32SetMock__factory extends ContractFactory {
  constructor(...args: EnumerableBytes32SetMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EnumerableBytes32SetMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): EnumerableBytes32SetMock__factory {
    return super.connect(runner) as EnumerableBytes32SetMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnumerableBytes32SetMockInterface {
    return new Interface(_abi) as EnumerableBytes32SetMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EnumerableBytes32SetMock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as EnumerableBytes32SetMock;
  }
}
