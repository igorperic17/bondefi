/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../../../../../../../common";
import type {
  BeaconProxy,
  BeaconProxyInterface,
} from "../../../../../../../contracts/lib/uniswap/openzeppelin/contracts/proxy/BeaconProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "beacon",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052604051610a33380380610a338339818101604052604081101561002657600080fd5b81019080805190602001909291908051604051939291908464010000000082111561005057600080fd5b8382019150602082018581111561006657600080fd5b825186600182028301116401000000008211171561008357600080fd5b8083526020830192505050908051906020019080838360005b838110156100b757808201518184015260208101905061009c565b50505050905090810190601f1680156100e45780820380516001836020036101000a031916815260200191505b5060405250505060017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5160001c0360001b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b1461014057fe5b610150828261015760201b60201c565b50506105fc565b61016a8261031d60201b6100371760201c565b6101bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806109b46025913960400191505060405180910390fd5b6102528273ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561020857600080fd5b505afa15801561021c573d6000803e3d6000fd5b505050506040513d602081101561023257600080fd5b810190808051906020019092919050505061031d60201b6100371760201c565b6102a7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806109ff6034913960400191505060405180910390fd5b60007fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b9050828155600082511115610318576103166102ed61033060201b60201c565b83604051806060016040528060218152602001610993602191396103c560201b61004a1760201c565b505b505050565b600080823b905060008111915050919050565b60006103406104ff60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561038557600080fd5b505afa158015610399573d6000803e3d6000fd5b505050506040513d60208110156103af57600080fd5b8101908080519060200190929190505050905090565b60606103d68461031d60201b60201c565b61042b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806109d96026913960400191505060405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff16856040518082805190602001908083835b602083106104795780518252602082019150602081019050602083039250610456565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d80600081146104d9576040519150601f19603f3d011682016040523d82523d6000602084013e6104de565b606091505b50915091506104f482828661053060201b60201c565b925050509392505050565b6000807fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b9050805491505090565b60608315610540578290506105f5565b6000835111156105535782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156105ba57808201518184015260208101905061059f565b50505050905090810190601f1680156105e75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b9392505050565b6103888061060b6000396000f3fe6080604052366100135761001161001d565b005b61001b61001d565b005b610025610178565b61003561003061017a565b610209565b565b600080823b905060008111915050919050565b606061005584610037565b6100aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061032d6026913960400191505060405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff16856040518082805190602001908083835b602083106100f857805182526020820191506020810190506020830392506100d5565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114610158576040519150601f19603f3d011682016040523d82523d6000602084013e61015d565b606091505b509150915061016d82828661022f565b925050509392505050565b565b60006101846102fb565b73ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156101c957600080fd5b505afa1580156101dd573d6000803e3d6000fd5b505050506040513d60208110156101f357600080fd5b8101908080519060200190929190505050905090565b3660008037600080366000845af43d6000803e806000811461022a573d6000f35b3d6000fd5b6060831561023f578290506102f4565b6000835111156102525782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156102b957808201518184015260208101905061029e565b50505050905090810190601f1680156102e65780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b9392505050565b6000807fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b905080549150509056fe416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374a264697066735822122061944a4d9ae34c4d022dbc604a372a5a75adbfca6b88915505c393c5d91598db64736f6c63430007060033426561636f6e50726f78793a2066756e6374696f6e2063616c6c206661696c6564426561636f6e50726f78793a20626561636f6e206973206e6f74206120636f6e7472616374416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374426561636f6e50726f78793a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374";

type BeaconProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BeaconProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BeaconProxy__factory extends ContractFactory {
  constructor(...args: BeaconProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    beacon: AddressLike,
    data: BytesLike,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(beacon, data, overrides || {});
  }
  override deploy(
    beacon: AddressLike,
    data: BytesLike,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(beacon, data, overrides || {}) as Promise<
      BeaconProxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BeaconProxy__factory {
    return super.connect(runner) as BeaconProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BeaconProxyInterface {
    return new Interface(_abi) as BeaconProxyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BeaconProxy {
    return new Contract(address, _abi, runner) as unknown as BeaconProxy;
  }
}
