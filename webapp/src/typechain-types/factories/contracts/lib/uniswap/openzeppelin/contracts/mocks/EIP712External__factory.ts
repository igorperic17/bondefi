/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../../../common";
import type {
  EIP712External,
  EIP712ExternalInterface,
} from "../../../../../../../contracts/lib/uniswap/openzeppelin/contracts/mocks/EIP712External";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "domainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "mailTo",
        type: "address",
      },
      {
        internalType: "string",
        name: "mailContents",
        type: "string",
      },
    ],
    name: "verify",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61012060405234801561001157600080fd5b506040516108fd3803806108fd8339818101604052604081101561003457600080fd5b810190808051604051939291908464010000000082111561005457600080fd5b90830190602082018581111561006957600080fd5b825164010000000081118282018810171561008357600080fd5b82525081516020918201929091019080838360005b838110156100b0578181015183820152602001610098565b50505050905090810190601f1680156100dd5780820380516001836020036101000a031916815260200191505b506040526020018051604051939291908464010000000082111561010057600080fd5b90830190602082018581111561011557600080fd5b825164010000000081118282018810171561012f57600080fd5b82525081516020918201929091019080838360005b8381101561015c578181015183820152602001610144565b50505050905090810190601f1680156101895780820380516001836020036101000a031916815260200191505b506040525050825160208085019190912083519184019190912060c082905260e08190528492508391907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6101dc6101fd565b60a0526101ea818484610201565b6080526101005250610263945050505050565b4690565b600083838361020e6101fd565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b03168152602001955050505050506040516020818303038152906040528051906020012090509392505050565b60805160a05160c05160e0516101005161065b6102a2600039806103945250806103d65250806103b552508061033b52508061036b525061065b6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806308c6e079146100465780633408e4701461018e578063f698da25146101a8575b600080fd5b61018c6004803603608081101561005c57600080fd5b81019060208101813564010000000081111561007757600080fd5b82018360208201111561008957600080fd5b803590602001918460018302840111640100000000831117156100ab57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092956001600160a01b03853581169660208701359091169591945092506060810191506040013564010000000081111561011757600080fd5b82018360208201111561012957600080fd5b8035906020019184600183028401116401000000008311171561014b57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506101b0945050505050565b005b610196610257565b60408051918252519081900360200190f35b61019661025b565b60006102217f847fc9da8ec3c72cae85ca691245eaeb0a4a1e74f77c3a919c43afda231d39ba84848051906020012060405160200180848152602001836001600160a01b0316815260200182815260200193505050506040516020818303038152906040528051906020012061026b565b9050600061022f82876102b7565b9050846001600160a01b0316816001600160a01b03161461024f57600080fd5b505050505050565b4690565b6000610265610337565b90505b90565b6000610275610337565b82604051602001808061190160f01b81525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b6000815160411461030f576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a61032d86828585610401565b9695505050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000610362610257565b141561038f57507f0000000000000000000000000000000000000000000000000000000000000000610268565b6103fa7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061057f565b9050610268565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156104625760405162461bcd60e51b81526004018080602001828103825260228152602001806105e26022913960400191505060405180910390fd5b8360ff16601b148061047757508360ff16601c145b6104b25760405162461bcd60e51b81526004018080602001828103825260228152602001806106046022913960400191505060405180910390fd5b600060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa15801561050e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610576576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b95945050505050565b600083838361058c610257565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b0316815260200195505050505050604051602081830303815290604052805190602001209050939250505056fe45434453413a20696e76616c6964207369676e6174757265202773272076616c756545434453413a20696e76616c6964207369676e6174757265202776272076616c7565a26469706673582212202a921e2feb5554f2a9f0a4bc6498f9a6c83f1f0e728b759601128ea9fd1411c964736f6c63430007060033";

type EIP712ExternalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EIP712ExternalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EIP712External__factory extends ContractFactory {
  constructor(...args: EIP712ExternalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    version: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name, version, overrides || {});
  }
  override deploy(
    name: string,
    version: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name, version, overrides || {}) as Promise<
      EIP712External & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EIP712External__factory {
    return super.connect(runner) as EIP712External__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EIP712ExternalInterface {
    return new Interface(_abi) as EIP712ExternalInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EIP712External {
    return new Contract(address, _abi, runner) as unknown as EIP712External;
  }
}
