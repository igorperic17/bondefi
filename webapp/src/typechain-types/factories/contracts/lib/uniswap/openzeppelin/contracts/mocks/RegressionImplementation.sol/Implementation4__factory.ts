/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../../../../common";
import type {
  Implementation4,
  Implementation4Interface,
} from "../../../../../../../../contracts/lib/uniswap/openzeppelin/contracts/mocks/RegressionImplementation.sol/Implementation4";

const _abi = [
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_number",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061023f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100455760003560e01c8063209652551461004f578063552410771461006d5780638129fc1c1461009b57610046565b5b60018081905550005b6100576100a5565b6040518082815260200191505060405180910390f35b6100996004803603602081101561008357600080fd5b81019080803590602001909291905050506100af565b005b6100a36100b9565b005b6000600154905090565b8060018190555050565b600060019054906101000a900460ff16806100d857506100d76101b7565b5b806100ee575060008054906101000a900460ff16155b610143576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806101dc602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610193576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b80156101b45760008060016101000a81548160ff0219169083151502179055505b50565b60006101c2306101c8565b15905090565b600080823b90506000811191505091905056fe496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a26469706673582212206362a7aac142df6e430d1dbc23aee9853185e03c0f30e5dd400aaa2a5940c52f64736f6c63430007060033";

type Implementation4ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Implementation4ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Implementation4__factory extends ContractFactory {
  constructor(...args: Implementation4ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Implementation4 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Implementation4__factory {
    return super.connect(runner) as Implementation4__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Implementation4Interface {
    return new Interface(_abi) as Implementation4Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Implementation4 {
    return new Contract(address, _abi, runner) as unknown as Implementation4;
  }
}
