/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../../../../common";
import type {
  SampleMother,
  SampleMotherInterface,
} from "../../../../../../../../contracts/lib/uniswap/openzeppelin/contracts/mocks/MultipleInheritanceInitializableMocks.sol/SampleMother";

const _abi = [
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isHuman",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mother",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506102a1806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634a6c9db6146100515780638129fc1c1461006d578063ed7dfee314610077578063fe4b84df14610091575b600080fd5b6100596100ae565b604080519115158252519081900360200190f35b6100756100bd565b005b61007f610170565b60408051918252519081900360200190f35b610075600480360360208110156100a757600080fd5b5035610176565b60005462010000900460ff1681565b600054610100900460ff16806100d657506100d6610226565b806100e4575060005460ff16155b61011f5760405162461bcd60e51b815260040180806020018281038252602e81526020018061023e602e913960400191505060405180910390fd5b600054610100900460ff1615801561014a576000805460ff1961ff0019909116610100171660011790555b6000805462ff0000191662010000179055801561016d576000805461ff00191690555b50565b60015481565b600054610100900460ff168061018f575061018f610226565b8061019d575060005460ff16155b6101d85760405162461bcd60e51b815260040180806020018281038252602e81526020018061023e602e913960400191505060405180910390fd5b600054610100900460ff16158015610203576000805460ff1961ff0019909116610100171660011790555b61020b6100bd565b60018290558015610222576000805461ff00191690555b5050565b600061023130610237565b15905090565b3b15159056fe496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a26469706673582212208ff0b3f681b9e4eaaf4f5d1b8ec41c0cd254d2130a64477fd3eb308aed80b1b064736f6c63430007060033";

type SampleMotherConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SampleMotherConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SampleMother__factory extends ContractFactory {
  constructor(...args: SampleMotherConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SampleMother & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SampleMother__factory {
    return super.connect(runner) as SampleMother__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SampleMotherInterface {
    return new Interface(_abi) as SampleMotherInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SampleMother {
    return new Contract(address, _abi, runner) as unknown as SampleMother;
  }
}
